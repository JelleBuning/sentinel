name: sentinel
services:
  sentinel.api:
    container_name: "sentinel.api"
    networks:
      - sentinel_network
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development" # "Development" | "Production" | "Staging"
      ConnectionStrings__Database: "Server=tcp:db;Database=master;User=sa;Password=3I+J4qEi#%+kLkpD5Qn;TrustServerCertificate=True"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
      SA_PASSWORD: "3I+J4qEi#%+kLkpD5Qn"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    container_name: "sentinel.db"
    networks:
      - sentinel_network
    ports:
      - "1433:1433"

networks:
  sentinel_network:
    driver: bridge