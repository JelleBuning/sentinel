name: .NET Release
  
permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-beta"
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]*"
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}.api

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Load nuget cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            !~/.nuget/packages/unwanted
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release --logger GitHubActions

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish win-x64
        run: dotnet publish ./src/Sentinel.Api/Sentinel.Api.csproj --configuration Release --output ./publish/win-x64 --self-contained true --runtime win-x64

      - name: Publish linux-x64
        run: dotnet publish ./src/Sentinel.Api/Sentinel.Api.csproj --configuration Release --output ./publish/linux-x64 --self-contained true --runtime linux-x64

      - name: Release files
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./publish/linux-x64/Sentinel.Api
            ./publish/win-x64/Sentinel.Api.exe

  docker-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          context: .
          file: ./src/Sentinel.Api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
  
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
